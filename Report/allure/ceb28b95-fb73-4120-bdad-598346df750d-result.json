{"name": "test_cx", "status": "broken", "statusDetails": {"message": "TimeoutError: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。", "trace": "self = <test_cx.Test_cx object at 0x000001D2893DD7F0>\n\n    def test_cx(self):\n        # =====测试cx收发包丢包=====\n>       cx_login(self)\n\ntest_cx.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_cx.py:18: in cx_login\n    ne_tel_23.open(tester_ip, 3000)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\telnetlib.py:235: in open\n    self.sock = socket.create_connection((host, port), timeout)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\socket.py:844: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('192.168.7.203', 3000)\ntimeout = <object object at 0x000001D288A9D4B0>, source_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        err = None\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\socket.py:832: TimeoutError"}, "start": 1677463003764, "stop": 1677463024771, "uuid": "bdfde8be-8efd-49f1-9898-82dfd22133c4", "historyId": "887f0726aab8c98183d949cdaf60889c", "testCaseId": "7b9d11113a3412f8dd2f5cec1c14e52b", "fullName": "test_cx.Test_cx#test_cx", "labels": [{"name": "suite", "value": "test_cx"}, {"name": "subSuite", "value": "Test_cx"}, {"name": "host", "value": "WINDOWS-LL6NE6T"}, {"name": "thread", "value": "13296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cx"}]}