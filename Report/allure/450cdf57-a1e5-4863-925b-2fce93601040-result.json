{"name": "test_LongParam", "status": "broken", "statusDetails": {"message": "EOFError: telnet connection closed", "trace": "self = <class 'test_plugins.Test_plugins'>\n\n    def setup_class(self):\n        self.p1 = plugins(\"192.168.1.1\",\"23\",\"telnetadmin\",\"telnetadmin\")\n>       self.p1.initialize()\n\ntest_plugins.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogin.py:132: in initialize\n    self.tel_debug_FM104()\nlogin.py:61: in tel_debug_FM104\n    self.tn.read_until(b'Passward: ',timeout=1)\nD:\\python 3.8.7\\lib\\telnetlib.py:329: in read_until\n    return self.read_very_lazy()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <telnetlib.Telnet object at 0x000001F3A1921130>\n\n    def read_very_lazy(self):\n        \"\"\"Return any data available in the cooked queue (very lazy).\n    \n        Raise EOFError if connection closed and no data available.\n        Return b'' if no cooked data available otherwise.  Don't block.\n    \n        \"\"\"\n        buf = self.cookedq\n        self.cookedq = b''\n        if not buf and self.eof and not self.rawq:\n>           raise EOFError('telnet connection closed')\nE           EOFError: telnet connection closed\n\nD:\\python 3.8.7\\lib\\telnetlib.py:405: EOFError"}, "start": 1700639231513, "stop": 1700639231513, "uuid": "358b0505-1b15-44c3-b653-b183c6afcae2", "historyId": "ada529718f23cb5a4760f3e163b5afbe", "testCaseId": "ada529718f23cb5a4760f3e163b5afbe", "fullName": "test_plugins.Test_plugins#test_LongParam", "labels": [{"name": "suite", "value": "test_plugins"}, {"name": "subSuite", "value": "Test_plugins"}, {"name": "host", "value": "l29707B"}, {"name": "thread", "value": "11252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_plugins"}]}