{"name": "test_debugupgrade", "status": "broken", "statusDetails": {"message": "EOFError: telnet connection closed", "trace": "self = <test_upgrade.Test_Check1 object at 0x0000016B59FEE310>\n\n    def test_debugupgrade(self):\n        name = self.getfilename()\n        a = 1\n        list=[\"gcImage0408.bin\",\"gcImage0530.bin\"]\n        # list1=[\"V01.02.00\",\"V01.00.00\"]\n    \n        for i in range (1,1000):\n            self.p2 = Test_Check(\"192.168.1.1\",\"23\",\"user\",\"user123\")\n            self.p2.tel_debug()\n            name1 = \"round%s\"%i\n            r = i%2\n            rel = self.p2.send_cmd(\"gc_omcicli dbg 7\")\n            rel = self.p2.send_cmd(\"gc_omcicli omcilog on\")\n            rel = self.p2.send_cmd(\"gccli consoleRedir on\")\n            self.p2.log(rel,name1,self.nowtime)\n            self.p1.tel_deslot(3)\n            self.p1.tel_cont()\n            self.p1.send_cmd(\"ont-upgrade\")\n            rel =self.p1.send_cmd(\"manual-upgrade 1/6/1 %s GTH904-TW\"%(list[r]))\n            self.p1.log(rel,name,self.nowtime)\n            rel=self.p1.send_cmd(\"show interface gpon-olt 1/6 ont-upgrade status\")\n            print(rel)\n            rel =re.findall(r\"1\\s+\\S+\\s+(\\S+)\", rel)\n            while rel != 'DPOE_NOT_FOUND'and rel != \"SUCCESS\"and rel !=\"ACTIVATING\":\n                rel=self.p1.send_cmd(\"show interface gpon-olt 1/6 ont-upgrade status\")\n                self.p1.log(rel,name,self.nowtime)\n                rel =re.findall(r\"1\\s+\\S+\\s+(\\S+)\", rel)\n                print(rel)\n>               relx = self.p2.send_cmd(\"cat /etc/gc_fw_info\")\n\ntest_upgrade.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogin.py:135: in send_cmd\n    rel = self.tn.read_very_eager().decode('utf-8','errors = ignore')\nD:\\python 3.8.7\\lib\\telnetlib.py:368: in read_very_eager\n    return self.read_very_lazy()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <telnetlib.Telnet object at 0x0000016B59FEEDC0>\n\n    def read_very_lazy(self):\n        \"\"\"Return any data available in the cooked queue (very lazy).\n    \n        Raise EOFError if connection closed and no data available.\n        Return b'' if no cooked data available otherwise.  Don't block.\n    \n        \"\"\"\n        buf = self.cookedq\n        self.cookedq = b''\n        if not buf and self.eof and not self.rawq:\n>           raise EOFError('telnet connection closed')\nE           EOFError: telnet connection closed\n\nD:\\python 3.8.7\\lib\\telnetlib.py:405: EOFError"}, "attachments": [{"name": "log", "source": "c6ac4181-df50-4962-a8d6-85d957073f4a-attachment.txt", "type": "text/plain"}], "start": 1687231353747, "stop": 1687231549066, "uuid": "e4e05c16-3268-4f7d-a2f7-01b7036bacbc", "historyId": "48fd7285f948fe65db759f9b6394cc52", "testCaseId": "48fd7285f948fe65db759f9b6394cc52", "fullName": "test_upgrade.Test_Check1#test_debugupgrade", "labels": [{"name": "suite", "value": "test_upgrade"}, {"name": "subSuite", "value": "Test_Check1"}, {"name": "host", "value": "l29707B"}, {"name": "thread", "value": "27412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_upgrade"}]}